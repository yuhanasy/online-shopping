{"version":3,"sources":["logo.svg","Navbar.js","Card.js","CardGroup.js","AddItem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","href","src","logo","alt","id","Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","buyItem","addOrder","setState","hidden","state","minusOrder","order","stockLeft","stock","bind","assertThisInitialized","_this2","empty","cancel","action","type","name","onClick","title","placeholder","min","max","value","readOnly","Component","CardGroup","itemList","list","map","item","src_Card","key","AddItem","handleChange","e","target","defineProperty","handleSubmit","preventDefault","addItem","undefined","img_src","onSubmit","htmlFor","onChange","required","data-error","data-success","App","newItem","Math","random","newList","toConsumableArray","concat","src_Navbar","src_CardGroup","src_AddItem","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99160836.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\n\n// Navbar Component\nconst Navbar = () => {\n  return (\n    <nav className=\"purple darken-4\">\n      <div className=\"nav-wrapper container\">\n        <a href=\"home.hmtl\" className=\"brand-logo\">\n          <img src={logo} className=\"App-logo\" alt=\"Logo\" />\n        </a>\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n          <li><a href=\"sass.html\">Your Order</a></li>\n          <li><a href=\"badges.html\">List Buyers</a></li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar;","import React, { Component } from 'react';\n\n// Card Component\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hidden: true,\n      stock: this.props.stock,\n      order: 0,\n      stockLeft: this.props.stock\n    }\n    this.buyItem = this.buyItem.bind(this)\n  }\n\n  buyItem = () => {\n    this.addOrder();\n    this.setState({\n      hidden: !this.state.hidden\n    })\n  }\n  \n  minusOrder = () => {\n    let order = this.state.order;\n    order -= 1;\n    let stockLeft = this.state.stockLeft;\n    stockLeft += 1;\n\n    this.setState({\n      order: order,\n      stockLeft: stockLeft,\n    })\n\n    if (order === 0) {\n      this.setState({\n        hidden: !this.state.hidden\n      })\n    }\n  }\n\n  addOrder = () => {\n    let order = this.state.order;\n    order += 1;\n    let stockLeft = this.state.stockLeft;\n    stockLeft -= 1;\n\n    this.setState({\n      order: order,\n      stockLeft: stockLeft,\n    })\n  }\n\n  render() {\n    const hidden = this.state.hidden;\n    const empty = this.state.stockLeft === 0;\n    const cancel = this.state.order === 0;\n\n    const action = hidden ? (\n        <div className=\"input-field card-input\">\n          <div className=\"flex flex-center\">\n            <button className=\"btn waves-effect waves-light purple darken-4\" type=\"submit\" name=\"action\" onClick={() => this.buyItem(this.props.title)}>\n              Buy\n              <span><i className=\"material-icons right\">shopping_basket</i></span>\n            </button>  \n          </div>\n        </div>\n      ) : ( \n        <div className=\"input-field card-input\">\n          <div className=\"flex flex-space-around\">\n            <button \n              className={\"btn waves-effect waves-light purple darken-3 \" + (cancel ? \"disabled\" : null)}\n              onClick={this.minusOrder}\n            >\n              <i className=\"material-icons\">remove</i>\n            </button>\n            <input \n              id=\"input-quantity\" \n              placeholder=\"1\" \n              name=\"input-quantity\" \n              type=\"number\" \n              min=\"0\" \n              max={this.props.stock} \n              className=\"center-align validate input-order\" \n              value={this.state.order} \n              readOnly\n            />\n            <button \n              className={\"btn waves-effect waves-light purple darken-3 \" + (empty ? \"disabled\" : null)} \n              onClick={this.addOrder}\n            >\n              <i className=\"material-icons\">add</i>\n            </button>                \n          </div>\n        </div>\n      )\n\n    return(\n      <div className=\"col s12 m4 l3\">\n        <div className=\"card small center-align\">\n          <div className=\"card-image\">\n            <div className=\"img-dummy center-aligned purple lighten-5\">{this.state.stock}, {this.state.stockLeft}</div>\n          </div>\n          <div className=\"card-title\">\n            {this.props.title}\n          </div>\n          <div className=\"card-action\">\n            {action}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n// CardGroup Component\nconst CardGroup = (props) => {\n  const itemList = props.list;\n  return(\n    <div className=\"section container\">\n      <div className=\"row\">\n        {itemList.map(item => {\n          return (\n          <Card title={item.name} key={item.id} stock={item.stock} />\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default CardGroup;","import React, { Component } from \"react\";\n\n// Add Item\nclass AddItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      stock: undefined,\n      img_src: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = e => {\n    const key = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [key]: value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.addItem(this.state);\n    this.setState({\n      name: \"\",\n      stock: undefined,\n      img_src: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container section row\">\n        <h3>Add Items</h3>\n        <form className=\"col s12 margin-top\" onSubmit={this.handleSubmit}>\n          <div className=\"row\">\n            <div className=\"input-field col l4\">\n              <label htmlFor=\"name-item\">Item's Name</label>\n              <input\n                id=\"name-item\"\n                placeholder=\"Item's name\"\n                name=\"name\"\n                type=\"text\"\n                className=\"validate\"\n                onChange={this.handleChange}\n                value={this.state.name}\n                required\n              />\n            </div>\n            <div className=\"input-field col l4\">\n              <label htmlFor=\"quantity\">Item's Quantity</label>\n              <input\n                id=\"stock\"\n                placeholder=\"How much your item is?\"\n                name=\"stock\"\n                type=\"number\"\n                min=\"0\"\n                className=\"validate\"\n                onChange={this.handleChange}\n                value={this.state.stock}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col l6\">\n              <label htmlFor=\"img-src\">Item's Source Path</label>\n              <input\n                id=\"img-src\"\n                placeholder=\"Where is the item's image stored?\"\n                name=\"img_src\"\n                type=\"text\"\n                className=\"validate\"\n                onChange={this.handleChange}\n                value={this.state.img_src}\n                required\n              />\n              <span\n                className=\"helper-text\"\n                data-error=\"wrong\"\n                data-success=\"right\"\n              >\n                Example: /assets/img/reactjs.png\n              </span>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col s4\">\n              <button\n                className=\"btn waves-effect waves-light purple darken-4\"\n                type=\"submit\"\n                name=\"action\"\n                onClick={this.handleSubmit}\n              >\n                Submit\n                <i className=\"material-icons right\">send</i>\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddItem;\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'materialize-css/dist/css/materialize.min.css'\n// eslint-disable-next-line no-unused-vars\nimport M from 'materialize-css'\nimport Navbar from './Navbar';\nimport CardGroup from './CardGroup'\nimport AddItem from './AddItem';\n\n// App Component\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      list: [\n        {id: 1, name: 'git', stock: 5, img_src: ''},\n        {id: 2, name: 'javascript', stock: 6, img_src: ''},\n        {id: 3, name: 'react js', stock: 3, img_src: ''},\n        {id: 4, name: 'redux', stock: 7, img_src: ''},\n      ]\n    }\n  }\n\n  AddItem = (newItem) => {\n    newItem.id = Math.random();\n    let newList = [...this.state.list, newItem]\n    this.setState({\n      list: newList\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar />        \n        <CardGroup list={this.state.list} />\n        <AddItem addItem={this.AddItem} />\n          {/* Total Item */}\n        <div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}